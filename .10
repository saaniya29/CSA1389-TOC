#include <stdio.h>
#include <stdbool.h>

#define MAX_STATES 10

// NFA transition table
int nfa[MAX_STATES][MAX_STATES];

// Function to calculate ε-closure for a state
void calculateEpsilonClosure(int state, int epsilonClosure[], int numStates) {
    static bool visited[MAX_STATES] = {false};
    visited[state] = true;
    epsilonClosure[state] = 1;

    for (int i = 0; i < numStates; i++) {
        if (nfa[state][i] == -1 || visited[i]) {
            continue;
        }

        calculateEpsilonClosure(i, epsilonClosure, numStates);
    }
}

int main() {
    int numStates;

    printf("Enter the number of states: ");
    scanf("%d", &numStates);

    printf("Enter the NFA transition table:\n");
    for (int i = 0; i < numStates; i++) {
        for (int j = 0; j < numStates; j++) {
            scanf("%d", &nfa[i][j]);
        }
    }

    int epsilonClosures[MAX_STATES][MAX_STATES] = {0};

    for (int i = 0; i < numStates; i++) {
        calculateEpsilonClosure(i, epsilonClosures[i], numStates);
    }

    printf("\nε-Closures for each state:\n");
    for (int i = 0; i < numStates; i++) {
        printf("ε-Closure(%d): { ", i);
        for (int j = 0; j < numStates; j++) {
            if (epsilonClosures[i][j]) {
                printf("%d ", j);
            }
        }
        printf("}\n");
    }

    return 0;
}
